(self["webpackChunkprofile"] = self["webpackChunkprofile"] || []).push([["node_modules_doc-cookies_cookies_js"],{

/***/ "./node_modules/doc-cookies/cookies.js":
/*!*********************************************!*\
  !*** ./node_modules/doc-cookies/cookies.js ***!
  \*********************************************/
/***/ (function(module) {

/*\
|*|
|*|	:: cookies.js ::
|*|
|*|	A complete cookies reader/writer framework with full unicode support.
|*|
|*|	Revision #3 - July 13th, 2017
|*|
|*|	https://developer.mozilla.org/en-US/docs/Web/API/document.cookie
|*|	https://developer.mozilla.org/User:fusionchess
|*|	https://github.com/madmurphy/cookies.js
|*|
|*|	This framework is released under the GNU Public License, version 3 or later.
|*|	http://www.gnu.org/licenses/gpl-3.0-standalone.html
|*|
|*|	Syntaxes:
|*|
|*|	* docCookies.setItem(name, value[, end[, path[, domain[, secure]]]])
|*|	* docCookies.getItem(name)
|*|	* docCookies.removeItem(name[, path[, domain]])
|*|	* docCookies.hasItem(name)
|*|	* docCookies.keys()
|*|
\*/

var docCookies = {
	getItem: function (sKey) {
		if (!sKey) { return null; }
		return decodeURIComponent(document.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*" + encodeURIComponent(sKey).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=\\s*([^;]*).*$)|^.*$"), "$1")) || null;
	},
	setItem: function (sKey, sValue, vEnd, sPath, sDomain, bSecure) {
		if (!sKey || /^(?:expires|max\-age|path|domain|secure)$/i.test(sKey)) { return false; }
		var sExpires = "";
		if (vEnd) {
			switch (vEnd.constructor) {
				case Number:
					sExpires = vEnd === Infinity ? "; expires=Fri, 31 Dec 9999 23:59:59 GMT" : "; max-age=" + vEnd;
					/*
					Note: Despite officially defined in RFC 6265, the use of `max-age` is not compatible with any
					version of Internet Explorer, Edge and some mobile browsers. Therefore passing a number to
					the end parameter might not work as expected. A possible solution might be to convert the the
					relative time to an absolute time. For instance, replacing the previous line with:
					*/
					/*
					sExpires = vEnd === Infinity ? "; expires=Fri, 31 Dec 9999 23:59:59 GMT" : "; expires=" + (new Date(vEnd * 1e3 + Date.now())).toUTCString();
					*/
					break;
				case String:
					sExpires = "; expires=" + vEnd;
					break;
				case Date:
					sExpires = "; expires=" + vEnd.toUTCString();
					break;
			}
		}
		document.cookie = encodeURIComponent(sKey) + "=" + encodeURIComponent(sValue) + sExpires + (sDomain ? "; domain=" + sDomain : "") + (sPath ? "; path=" + sPath : "") + (bSecure ? "; secure" : "");
		return true;
	},
	removeItem: function (sKey, sPath, sDomain) {
		if (!this.hasItem(sKey)) { return false; }
		document.cookie = encodeURIComponent(sKey) + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT" + (sDomain ? "; domain=" + sDomain : "") + (sPath ? "; path=" + sPath : "");
		return true;
	},
	hasItem: function (sKey) {
		if (!sKey || /^(?:expires|max\-age|path|domain|secure)$/i.test(sKey)) { return false; }
		return (new RegExp("(?:^|;\\s*)" + encodeURIComponent(sKey).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=")).test(document.cookie);
	},
	keys: function () {
		var aKeys = document.cookie.replace(/((?:^|\s*;)[^\=]+)(?=;|$)|^\s*|\s*(?:\=[^;]*)?(?:\1|$)/g, "").split(/\s*(?:\=[^;]*)?;\s*/);
		for (var nLen = aKeys.length, nIdx = 0; nIdx < nLen; nIdx++) { aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]); }
		return aKeys;
	}
};

if ( true && typeof module.exports !== "undefined") {
	module.exports = docCookies;
}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2RvYy1jb29raWVzX2Nvb2tpZXNfanMuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YsMkVBQTJFLG1GQUFtRjtBQUM5SixFQUFFO0FBQ0Y7QUFDQSwwRUFBMEU7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsNENBQTRDO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLDRDQUE0QztBQUNuRjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSwyR0FBMkcsdUNBQXVDLHFDQUFxQztBQUN2TDtBQUNBLEVBQUU7QUFDRjtBQUNBLDZCQUE2QjtBQUM3QixtREFBbUQsdURBQXVELHVDQUF1QztBQUNqSjtBQUNBLEVBQUU7QUFDRjtBQUNBLDBFQUEwRTtBQUMxRSw0QkFBNEI7QUFDNUIsRUFBRTtBQUNGO0FBQ0EsaURBQWlELFlBQVksb0JBQW9CLHNDQUFzQyxLQUFLO0FBQzVILDBDQUEwQyxhQUFhLFVBQVU7QUFDakU7QUFDQTtBQUNBOztBQUVBLElBQUksS0FBNkI7QUFDakM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb2ZpbGUvLi9ub2RlX21vZHVsZXMvZG9jLWNvb2tpZXMvY29va2llcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxcXG58KnxcbnwqfFx0OjogY29va2llcy5qcyA6OlxufCp8XG58KnxcdEEgY29tcGxldGUgY29va2llcyByZWFkZXIvd3JpdGVyIGZyYW1ld29yayB3aXRoIGZ1bGwgdW5pY29kZSBzdXBwb3J0LlxufCp8XG58KnxcdFJldmlzaW9uICMzIC0gSnVseSAxM3RoLCAyMDE3XG58KnxcbnwqfFx0aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL2RvY3VtZW50LmNvb2tpZVxufCp8XHRodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9Vc2VyOmZ1c2lvbmNoZXNzXG58KnxcdGh0dHBzOi8vZ2l0aHViLmNvbS9tYWRtdXJwaHkvY29va2llcy5qc1xufCp8XG58KnxcdFRoaXMgZnJhbWV3b3JrIGlzIHJlbGVhc2VkIHVuZGVyIHRoZSBHTlUgUHVibGljIExpY2Vuc2UsIHZlcnNpb24gMyBvciBsYXRlci5cbnwqfFx0aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2dwbC0zLjAtc3RhbmRhbG9uZS5odG1sXG58KnxcbnwqfFx0U3ludGF4ZXM6XG58KnxcbnwqfFx0KiBkb2NDb29raWVzLnNldEl0ZW0obmFtZSwgdmFsdWVbLCBlbmRbLCBwYXRoWywgZG9tYWluWywgc2VjdXJlXV1dXSlcbnwqfFx0KiBkb2NDb29raWVzLmdldEl0ZW0obmFtZSlcbnwqfFx0KiBkb2NDb29raWVzLnJlbW92ZUl0ZW0obmFtZVssIHBhdGhbLCBkb21haW5dXSlcbnwqfFx0KiBkb2NDb29raWVzLmhhc0l0ZW0obmFtZSlcbnwqfFx0KiBkb2NDb29raWVzLmtleXMoKVxufCp8XG5cXCovXG5cbnZhciBkb2NDb29raWVzID0ge1xuXHRnZXRJdGVtOiBmdW5jdGlvbiAoc0tleSkge1xuXHRcdGlmICghc0tleSkgeyByZXR1cm4gbnVsbDsgfVxuXHRcdHJldHVybiBkZWNvZGVVUklDb21wb25lbnQoZG9jdW1lbnQuY29va2llLnJlcGxhY2UobmV3IFJlZ0V4cChcIig/Oig/Ol58Lio7KVxcXFxzKlwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHNLZXkpLnJlcGxhY2UoL1tcXC1cXC5cXCtcXCpdL2csIFwiXFxcXCQmXCIpICsgXCJcXFxccypcXFxcPVxcXFxzKihbXjtdKikuKiQpfF4uKiRcIiksIFwiJDFcIikpIHx8IG51bGw7XG5cdH0sXG5cdHNldEl0ZW06IGZ1bmN0aW9uIChzS2V5LCBzVmFsdWUsIHZFbmQsIHNQYXRoLCBzRG9tYWluLCBiU2VjdXJlKSB7XG5cdFx0aWYgKCFzS2V5IHx8IC9eKD86ZXhwaXJlc3xtYXhcXC1hZ2V8cGF0aHxkb21haW58c2VjdXJlKSQvaS50ZXN0KHNLZXkpKSB7IHJldHVybiBmYWxzZTsgfVxuXHRcdHZhciBzRXhwaXJlcyA9IFwiXCI7XG5cdFx0aWYgKHZFbmQpIHtcblx0XHRcdHN3aXRjaCAodkVuZC5jb25zdHJ1Y3Rvcikge1xuXHRcdFx0XHRjYXNlIE51bWJlcjpcblx0XHRcdFx0XHRzRXhwaXJlcyA9IHZFbmQgPT09IEluZmluaXR5ID8gXCI7IGV4cGlyZXM9RnJpLCAzMSBEZWMgOTk5OSAyMzo1OTo1OSBHTVRcIiA6IFwiOyBtYXgtYWdlPVwiICsgdkVuZDtcblx0XHRcdFx0XHQvKlxuXHRcdFx0XHRcdE5vdGU6IERlc3BpdGUgb2ZmaWNpYWxseSBkZWZpbmVkIGluIFJGQyA2MjY1LCB0aGUgdXNlIG9mIGBtYXgtYWdlYCBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGFueVxuXHRcdFx0XHRcdHZlcnNpb24gb2YgSW50ZXJuZXQgRXhwbG9yZXIsIEVkZ2UgYW5kIHNvbWUgbW9iaWxlIGJyb3dzZXJzLiBUaGVyZWZvcmUgcGFzc2luZyBhIG51bWJlciB0b1xuXHRcdFx0XHRcdHRoZSBlbmQgcGFyYW1ldGVyIG1pZ2h0IG5vdCB3b3JrIGFzIGV4cGVjdGVkLiBBIHBvc3NpYmxlIHNvbHV0aW9uIG1pZ2h0IGJlIHRvIGNvbnZlcnQgdGhlIHRoZVxuXHRcdFx0XHRcdHJlbGF0aXZlIHRpbWUgdG8gYW4gYWJzb2x1dGUgdGltZS4gRm9yIGluc3RhbmNlLCByZXBsYWNpbmcgdGhlIHByZXZpb3VzIGxpbmUgd2l0aDpcblx0XHRcdFx0XHQqL1xuXHRcdFx0XHRcdC8qXG5cdFx0XHRcdFx0c0V4cGlyZXMgPSB2RW5kID09PSBJbmZpbml0eSA/IFwiOyBleHBpcmVzPUZyaSwgMzEgRGVjIDk5OTkgMjM6NTk6NTkgR01UXCIgOiBcIjsgZXhwaXJlcz1cIiArIChuZXcgRGF0ZSh2RW5kICogMWUzICsgRGF0ZS5ub3coKSkpLnRvVVRDU3RyaW5nKCk7XG5cdFx0XHRcdFx0Ki9cblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBTdHJpbmc6XG5cdFx0XHRcdFx0c0V4cGlyZXMgPSBcIjsgZXhwaXJlcz1cIiArIHZFbmQ7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgRGF0ZTpcblx0XHRcdFx0XHRzRXhwaXJlcyA9IFwiOyBleHBpcmVzPVwiICsgdkVuZC50b1VUQ1N0cmluZygpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRkb2N1bWVudC5jb29raWUgPSBlbmNvZGVVUklDb21wb25lbnQoc0tleSkgKyBcIj1cIiArIGVuY29kZVVSSUNvbXBvbmVudChzVmFsdWUpICsgc0V4cGlyZXMgKyAoc0RvbWFpbiA/IFwiOyBkb21haW49XCIgKyBzRG9tYWluIDogXCJcIikgKyAoc1BhdGggPyBcIjsgcGF0aD1cIiArIHNQYXRoIDogXCJcIikgKyAoYlNlY3VyZSA/IFwiOyBzZWN1cmVcIiA6IFwiXCIpO1xuXHRcdHJldHVybiB0cnVlO1xuXHR9LFxuXHRyZW1vdmVJdGVtOiBmdW5jdGlvbiAoc0tleSwgc1BhdGgsIHNEb21haW4pIHtcblx0XHRpZiAoIXRoaXMuaGFzSXRlbShzS2V5KSkgeyByZXR1cm4gZmFsc2U7IH1cblx0XHRkb2N1bWVudC5jb29raWUgPSBlbmNvZGVVUklDb21wb25lbnQoc0tleSkgKyBcIj07IGV4cGlyZXM9VGh1LCAwMSBKYW4gMTk3MCAwMDowMDowMCBHTVRcIiArIChzRG9tYWluID8gXCI7IGRvbWFpbj1cIiArIHNEb21haW4gOiBcIlwiKSArIChzUGF0aCA/IFwiOyBwYXRoPVwiICsgc1BhdGggOiBcIlwiKTtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSxcblx0aGFzSXRlbTogZnVuY3Rpb24gKHNLZXkpIHtcblx0XHRpZiAoIXNLZXkgfHwgL14oPzpleHBpcmVzfG1heFxcLWFnZXxwYXRofGRvbWFpbnxzZWN1cmUpJC9pLnRlc3Qoc0tleSkpIHsgcmV0dXJuIGZhbHNlOyB9XG5cdFx0cmV0dXJuIChuZXcgUmVnRXhwKFwiKD86Xnw7XFxcXHMqKVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHNLZXkpLnJlcGxhY2UoL1tcXC1cXC5cXCtcXCpdL2csIFwiXFxcXCQmXCIpICsgXCJcXFxccypcXFxcPVwiKSkudGVzdChkb2N1bWVudC5jb29raWUpO1xuXHR9LFxuXHRrZXlzOiBmdW5jdGlvbiAoKSB7XG5cdFx0dmFyIGFLZXlzID0gZG9jdW1lbnQuY29va2llLnJlcGxhY2UoLygoPzpefFxccyo7KVteXFw9XSspKD89O3wkKXxeXFxzKnxcXHMqKD86XFw9W147XSopPyg/OlxcMXwkKS9nLCBcIlwiKS5zcGxpdCgvXFxzKig/OlxcPVteO10qKT87XFxzKi8pO1xuXHRcdGZvciAodmFyIG5MZW4gPSBhS2V5cy5sZW5ndGgsIG5JZHggPSAwOyBuSWR4IDwgbkxlbjsgbklkeCsrKSB7IGFLZXlzW25JZHhdID0gZGVjb2RlVVJJQ29tcG9uZW50KGFLZXlzW25JZHhdKTsgfVxuXHRcdHJldHVybiBhS2V5cztcblx0fVxufTtcblxuaWYgKHR5cGVvZiBtb2R1bGUgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzICE9PSBcInVuZGVmaW5lZFwiKSB7XG5cdG1vZHVsZS5leHBvcnRzID0gZG9jQ29va2llcztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==